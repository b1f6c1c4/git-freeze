#!/bin/bash

set -euo pipefail

gitdir() {
    D="$(git rev-parse --git-dir)"
    realpath "$D"
}

usage() {
    cat - <<EOF
Usage: git-freeze [-h|--help] [--octopus|--no-commit|--no-reset] [--] ...

    Convert submodules to regular directories (of their HEADs)

    --octopus: preserve history of all submodules by merging

        Warning: ENTIRE history of ALL submodules is a huge deal!

    --no-commit: just give me the tree SHA1, don't commit

    --no-reset: just give me the index (implies --no-commit)

    ...: the rest parameters are passed directly to git commit

EOF
}

G="$(gitdir)"

if [ "$#" -eq 2 ] && [ "$1" = "---" ]; then
    cat - <<EOF
printf "Freezing %s\n" "\$P" >&2
git fetch $2 -q $(printf '%q' "file://$(gitdir)") HEAD
git update-index --force-remove -- "\$P"
git read-tree "--prefix=\$P" FETCH_HEAD
git rev-parse FETCH_HEAD >>"\$G/MERGE_HEAD"
printf "%s %s\n" "\$P" "\$(git rev-parse FETCH_HEAD)" >>"\$G/MERGE_MSG"
EOF
    exit 0
fi

OCTOPUS=
COMMIT=YES
RESET=YES
ARGS=()
while [ "$#" -gt 0 ]; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        --octopus)
            OCTOPUS=YES
            shift
            ;;
        --no-commit)
            COMMIT=
            shift
            ;;
        --no-reset)
            RESET=
            COMMIT=
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            ARGS+=("$1")
            shift
            ;;
    esac
done
while [ "$#" -gt 0 ]; do
    ARGS+=("$1")
    shift
done

cd "$(git rev-parse --show-toplevel)"
if [ -n "$(git diff-index --cached HEAD)" ]; then
    echo "Error: Index not clean." >&2
    exit 3
elif [ -f "$G/MERGE_HEAD" ]; then
    echo "Error: Merging in process." >&2
    exit 3
fi

if [ ! -x "$0" ]; then
    echo "Error: \$0 does not exist. Don't source the script." >&2
    exit 3
fi

TMPSH="$(realpath "$(mktemp)")"
finish() {
    cd /
    rm -f "$TMPSH"
}
trap finish EXIT

WORD=
[ -z "$OCTOPUS" ] && WORD="--depth=1"
cat - >"$G/MERGE_MSG" <<EOF
git-freeze: Convert submodules to regular dirs

List of submodules converted:

EOF

TMPSH="$(mktemp)"
git submodule foreach --recursive "$0" --- "$WORD" | sed 's_^Entering _P=_' > "$TMPSH"
source "$TMPSH"
rm -f "$TMPSH"

[ -z "$OCTOPUS" ] && rm -f "$G/MERGE_HEAD"
[ -n "$OCTOPUS" ] && printf 'no-ff' >>"$G/MERGE_MODE"

[ -n "$COMMIT" ] && exec git commit "${ARGS[@]}"
git write-tree
[ -n "$RESET" ] && git reset -q

exit 0
