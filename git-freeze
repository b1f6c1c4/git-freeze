#!/bin/sh

set -euo pipefail

gitdir() {
    D="$(git rev-parse --git-dir)"
    echo "$(realpath "$D")"
}

if [ "$#" -eq 1 ] && ([ "$1" = "-h" ] || [ "$1" = "--help" ]); then
    cat - <<EOF
Usage: git-freeze [-h|--help] [--shallow] [--octopus|--no-commit|--no-reset] ...

    Convert submodules to regular directories

    --octopus: preserve history of all submodules by merging

        Warning: ENTIRE history of ALL submodules is a huge deal!

    --no-commit: just give me the tree SHA1, don't commit

    --no-reset: just give me the index (implies --no-commit)

    ...: the rest parameters are passed directly to git commit

EOF
fi

G="$(gitdir)"

if [ "$#" -eq 1 ] && [ "$1" = "--" ]; then
    cat - <<EOF
echo "Freezing \$P" >&2
git fetch --depth=1 -q $(printf '%q' "file://$(gitdir)") HEAD
git update-index --force-remove -- "\$P"
git read-tree "--prefix=\$P" FETCH_HEAD
EOF
    exit 0
fi
if [ "$#" -eq 1 ] && [ "$1" = "---" ]; then
    cat - <<EOF
echo "Freezing \$P" >&2
git fetch $(printf '%q' "file://$(gitdir)") HEAD
git update-index --force-remove -- "\$P"
git read-tree "--prefix=\$P" FETCH_HEAD
git rev-parse FETCH_HEAD >> "\$G/MERGE_HEAD"
echo "\$P" "\$(git rev-parse FETCH_HEAD)" >>"\$G/MERGE_MSG"
EOF
    exit 0
fi

cd "$(git rev-parse --show-toplevel)"
if [ ! -z "$(git diff-index --cached HEAD)" ]; then
    echo "Error: Index not clean." >&2
    exit 3
elif [ -f "$G/MERGE_HEAD" ]; then
    echo "Error: Merging in process." >&2
    exit 3
fi

if [ "$#" -eq 1 ] && [ "$1" = "--octopus" ]; then
    shift
    TMPSH="$(mktemp)"
    git submodule foreach --recursive "$0" --- | sed 's_^Entering _P=_' > "$TMPSH"
    cat - >"$G/MERGE_MSG" <<EOF
git-freeze: Convert submodules to regular dirs

List of submodules converted:

EOF
    source "$TMPSH"
    rm -f "$TMPSH"
    exec git commit "$@"
fi

TMPSH="$(mktemp)"
git submodule foreach --recursive "$0" -- | sed 's_^Entering _P=_' > "$TMPSH"
source "$TMPSH"
rm -f "$TMPSH"

if [ "$#" -eq 0 ]; then
    exec git commit "$@"
elif [ "$1" = "--no-commit" ]; then
    git write-tree
    git reset -q
    exit 0
elif [ "$1" = "--no-reset" ]; then
    git write-tree
    exit 0
fi
